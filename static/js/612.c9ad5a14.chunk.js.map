{"version":3,"file":"static/js/612.c9ad5a14.chunk.js","mappings":"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","sources":["shared/assets/Home-Icon.svg","components/UserRoute/UserRoute.tsx","components/About/About.tsx","components/TechSpecs/TechSpecs.tsx","components/DeviceBlock/DeviceBlock.tsx","components/PhoneImageSlider/PhoneImageSlider.tsx","pages/ProductDetailsPage/ProductDetails.page.tsx"],"sourcesContent":["var _path, _path2;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgHomeIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M7.59087 0.807088C7.83161 0.619846 8.16872 0.619846 8.40946 0.807088L14.4095 5.47375C14.5718 5.60006 14.6668 5.79426 14.6668 5.99999V13.3333C14.6668 13.8638 14.4561 14.3725 14.081 14.7475C13.706 15.1226 13.1973 15.3333 12.6668 15.3333H3.3335C2.80306 15.3333 2.29436 15.1226 1.91928 14.7475C1.54421 14.3725 1.3335 13.8638 1.3335 13.3333V5.99999C1.3335 5.79426 1.42848 5.60006 1.59087 5.47375L7.59087 0.807088ZM2.66683 6.32605V13.3333C2.66683 13.5101 2.73707 13.6797 2.86209 13.8047C2.98712 13.9298 3.15669 14 3.3335 14H12.6668C12.8436 14 13.0132 13.9298 13.1382 13.8047C13.2633 13.6797 13.3335 13.5101 13.3335 13.3333V6.32605L8.00016 2.1779L2.66683 6.32605Z\",\n    fill: \"#F1F2F9\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M5.3335 8.00001C5.3335 7.63182 5.63197 7.33334 6.00016 7.33334H10.0002C10.3684 7.33334 10.6668 7.63182 10.6668 8.00001V14.6667C10.6668 15.0349 10.3684 15.3333 10.0002 15.3333C9.63197 15.3333 9.3335 15.0349 9.3335 14.6667V8.66668H6.66683V14.6667C6.66683 15.0349 6.36835 15.3333 6.00016 15.3333C5.63197 15.3333 5.3335 15.0349 5.3335 14.6667V8.00001Z\",\n    fill: \"#F1F2F9\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgHomeIcon);\nexport default __webpack_public_path__ + \"static/media/Home-Icon.901f72c9436f9e8c63573838c422c80d.svg\";\nexport { ForwardRef as ReactComponent };","import { FC } from 'react';\nimport './UserRoute.scss';\nimport { Link, useLocation } from 'react-router-dom';\nimport { ReactComponent as HomeIcon } from 'shared/assets/Home-Icon.svg';\nimport { ReactComponent as ChevronIcon } from 'shared/assets/Chevron-Arrow-Right.svg';\nimport { getCatalog, getDevicePath } from 'shared/utils/getRoutes';\n\ninterface Props {\n  slug?: string;\n}\n\nconst UserRoute: FC<Props> = ({ slug }) => {\n  const locationPath = useLocation()\n    .pathname.split('/')\n    .filter((el) => el !== 'catalog' && el.length)[0];\n\n  return (\n    <div className=\"user-route\">\n      <Link to={'/'}>\n        <HomeIcon />\n      </Link>\n      {locationPath && (\n        <>\n          <ChevronIcon />\n          <Link\n            to={'/' + getCatalog(locationPath)}\n            className=\"user-route__path-item\"\n          >\n            {locationPath}\n          </Link>\n        </>\n      )}\n      {slug && (\n        <>\n          <ChevronIcon />\n          <Link\n            to={getDevicePath(locationPath, slug)}\n            className=\"user-route__path-item\"\n          >\n            {slug}\n          </Link>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default UserRoute;\n","import React from 'react';\nimport './About.scss';\nimport { Description } from 'models/IProductModel';\n\ntype Prop = {\n  productDescription: Description[];\n};\n\nexport const About: React.FC<Prop> = ({ productDescription }) => {\n  return (\n    <div className=\"about\">\n      <h3 className=\"about__title\">About</h3>\n      {productDescription.map((article) => {\n        return (\n          <div className=\"about__description\" key={article.title}>\n            <h4 className=\"about__subtitle\">{article.title}</h4>\n\n            <p className=\"about__text\">{article.text}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React from 'react';\nimport './TechSpecs.scss';\nimport { IProductModel } from 'models/IProductModel';\n\ntype Props = {\n  productInfo: IProductModel;\n};\n\nexport const TechSpecs: React.FC<Props> = ({ productInfo }) => {\n  const { screen, resolution, processor, ram, capacity, camera, zoom, cell } =\n    productInfo;\n\n  return (\n    <div className=\"tech-specs\">\n      <h3 className=\"tech-specs__title\">Tech specs</h3>\n\n      <div className=\"tech-specs__item\">\n        <p className=\"tech-specs__name\">Screen</p>\n        <p className=\"tech-specs__value\">\n          {/* eslint-disable */}\n          {screen.split(\"'\").join('” ')}\n          {/* eslint-enable */}\n        </p>\n      </div>\n\n      <div className=\"tech-specs__item\">\n        <p className=\"tech-specs__name\">Resolution</p>\n        <p className=\"tech-specs__value\">{resolution}</p>\n      </div>\n\n      <div className=\"tech-specs__item\">\n        <p className=\"tech-specs__name\">Processor</p>\n        <p className=\"tech-specs__value\">{processor}</p>\n      </div>\n\n      <div className=\"tech-specs__item\">\n        <p className=\"tech-specs__name\">RAM</p>\n        <p className=\"tech-specs__value\">{`${parseInt(ram)} GB`}</p>\n      </div>\n\n      <div className=\"tech-specs__item\">\n        <p className=\"tech-specs__name\">Built in memory</p>\n        <p className=\"tech-specs__value\">{`${parseInt(capacity)} GB`}</p>\n      </div>\n\n      <div className=\"tech-specs__item\">\n        <p className=\"tech-specs__name\">Camera</p>\n        <p className=\"tech-specs__value\">{camera}</p>\n      </div>\n\n      <div className=\"tech-specs__item\">\n        <p className=\"tech-specs__name\">Zoom</p>\n        <p className=\"tech-specs__value\">{zoom}</p>\n      </div>\n\n      <div className=\"tech-specs__item\">\n        <p className=\"tech-specs__name\">Cell</p>\n        <p className=\"tech-specs__value\">{cell.join(', ')}</p>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { IProductModel } from 'models/IProductModel';\nimport { getDevicePath } from 'shared/utils/getRoutes';\nimport './DeviceBlock.scss';\nimport { AddToCartButton } from 'components/AddToCartButton';\nimport { FavouritesButton } from 'components/FavouritesButton';\n\ntype Props = {\n  product: IProductModel;\n  pathname: string;\n};\n\nexport const DeviceBlock: React.FC<Props> = ({ product, pathname }) => {\n  const {\n    slug,\n    colorsAvailable,\n    color,\n    capacityAvailable,\n    capacity,\n    priceRegular,\n    priceDiscount,\n    screen,\n    resolution,\n    processor,\n    ram,\n  } = product;\n\n  const category = pathname.split('/').splice(-2, 1).join('');\n\n  return (\n    <div className=\"device-block\">\n      <span className=\"device-block__feature-name\">Available colors</span>\n      <div className=\"device-block__buttons\">\n        {colorsAvailable.map((currentColor) => (\n          <Link\n            to={`/${getDevicePath(\n              category,\n              slug.replace(color, currentColor),\n            )}`}\n            className={classNames(\n              'device-block__color-button',\n              `device-block__color-button--${currentColor}`,\n              {\n                'device-block__color-button--active': currentColor === color,\n              },\n            )}\n            key={currentColor}\n          ></Link>\n        ))}\n      </div>\n\n      <span className=\"device-block__feature-name\">Select capacity</span>\n      <div className=\"device-block__buttons\">\n        {capacityAvailable.map((currentCapacity) => (\n          <Link\n            to={`/${getDevicePath(\n              category,\n              slug.replace(\n                capacity.toLowerCase(),\n                currentCapacity.toLocaleLowerCase(),\n              ),\n            )}`}\n            className={classNames('device-block__capacity-button', {\n              'device-block__capacity-button--active':\n                currentCapacity === capacity,\n            })}\n            key={currentCapacity}\n          >\n            {currentCapacity}\n          </Link>\n        ))}\n      </div>\n\n      <p className=\"device-block__price\">\n        <span className=\"device-block__price-current\">${priceDiscount}</span>\n\n        <span className=\"device-block__price-full\">${priceRegular}</span>\n      </p>\n\n      <div className=\"device-block__buy\">\n        <AddToCartButton product={product} />\n        <FavouritesButton product={product} />\n      </div>\n\n      <div className=\"device-block__features\">\n        <p className=\"device-block__feature\">\n          <span className=\"device-block__feature-name\">Screen</span>\n\n          <span className=\"device-block__feature-value\">\n            {/* eslint-disable */}\n            {screen.split(\"'\").join('” ')}\n            {/* eslint-enable */}\n          </span>\n        </p>\n\n        <p className=\"device-block__feature\">\n          <span className=\"device-block__feature-name\">Resolution</span>\n          <span className=\"device-block__feature-value\">{resolution}</span>\n        </p>\n\n        <p className=\"device-block__feature\">\n          <span className=\"device-block__feature-name\">Processor</span>\n          <span className=\"device-block__feature-value\">{processor}</span>\n        </p>\n\n        <p className=\"device-block__feature\">\n          <span className=\"device-block__feature-name\">RAM</span>\n          <span className=\"device-block__feature-value\">{`${parseInt(\n            ram,\n          )} GB`}</span>\n        </p>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport classNames from 'classnames';\nimport './PhoneImageSlider.scss';\nimport { BASE_URL } from 'shared/utils/constants';\n\ntype Props = {\n  images: string[];\n  alt: string;\n};\n\nexport const PhoneImageSlider: React.FC<Props> = ({ images, alt }) => {\n  const [selected, setSelected] = useState(images[0]);\n\n  useEffect(() => {\n    setSelected(images[0]);\n  }, [images]);\n\n  return (\n    <div className=\"phone-slider\">\n      <div className=\"phone-slider__col\">\n        {images.map((image) => (\n          <button\n            key={image}\n            aria-label=\"image\"\n            type=\"button\"\n            className={classNames('phone-slider__button', {\n              'phone-slider__button--active': selected === image,\n            })}\n            onClick={() => setSelected(image)}\n          >\n            <img\n              src={`${BASE_URL}${image}`}\n              alt={alt}\n              className=\"phone-slider__image\"\n            />\n          </button>\n        ))}\n      </div>\n      <div className=\"phone-slider__wrapper\">\n        <img\n          src={`${BASE_URL}${selected}`}\n          alt={alt}\n          className=\"phone-slider__image--main\"\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport './ProductDetails.page.scss';\nimport { getHomePath } from 'shared/utils/getRoutes';\nimport { ProductsSlider } from 'components/ProductsSlider';\nimport { About } from 'components/About';\nimport { TechSpecs } from 'components/TechSpecs';\nimport { DeviceBlock } from 'components/DeviceBlock';\nimport { PhoneImageSlider } from 'components/PhoneImageSlider';\nimport {\n  useGetPhoneBySlugQuery,\n  useGetHotPricePhonesQuery,\n} from 'api/phones.api';\nimport { IProductModel } from 'models/IProductModel';\nimport UserRoute from 'components/UserRoute/UserRoute';\n\nconst ProductDetailsPage: React.FC = () => {\n  const [product, setProduct] = useState<IProductModel | null>(null);\n  const [hotPriceModels, setHotPriceModels] = useState<IProductModel[]>([]);\n  const { pathname } = useLocation();\n  const slug = useParams().slug || '';\n  const productResponse = useGetPhoneBySlugQuery(slug);\n  const hotPriceResponse = useGetHotPricePhonesQuery();\n\n  useEffect(() => {\n    productResponse.refetch();\n    hotPriceResponse.refetch();\n\n    if (productResponse.isSuccess) {\n      setProduct(productResponse.data);\n    }\n\n    if (hotPriceResponse.isSuccess) {\n      setHotPriceModels(hotPriceResponse.data);\n    }\n  }, [productResponse.currentData, hotPriceResponse.currentData]);\n\n  return (\n    <>\n      {product && (\n        <div className=\"product-details\">\n          <div className=\"container\">\n            <UserRoute slug={product.slug} />\n            <Link to={getHomePath()} className=\"product-details__link\">\n              Back\n            </Link>\n            <h2 className=\"product-details__title\">{product.name}</h2>\n            <div className=\"product-details__info\">\n              <PhoneImageSlider images={product.images} alt={product.name} />\n              <DeviceBlock product={product} pathname={pathname} />\n              <span className=\"product-details__id\">\n                ID: {product.id.toString().padStart(4, '0')}\n              </span>\n            </div>\n            <div className=\"product-details__info\">\n              <About productDescription={product.description} />\n              <TechSpecs productInfo={product} />\n            </div>\n            <ProductsSlider title=\"You may also like\" phones={hotPriceModels} />\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ProductDetailsPage;\n"],"names":["_path","_path2","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgHomeIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","fillRule","clipRule","d","ForwardRef","slug","locationPath","useLocation","pathname","split","filter","el","_jsxs","className","children","_jsx","Link","to","HomeIcon","_Fragment","ChevronIcon","getCatalog","getDevicePath","About","productDescription","map","article","text","TechSpecs","productInfo","screen","resolution","processor","ram","capacity","camera","zoom","cell","join","concat","parseInt","DeviceBlock","product","colorsAvailable","color","capacityAvailable","priceRegular","priceDiscount","category","splice","currentColor","replace","classNames","currentCapacity","toLowerCase","toLocaleLowerCase","AddToCartButton","FavouritesButton","PhoneImageSlider","images","alt","_useState","useState","_useState2","_slicedToArray","selected","setSelected","useEffect","image","type","onClick","src","BASE_URL","setProduct","_useState3","_useState4","hotPriceModels","setHotPriceModels","useParams","productResponse","useGetPhoneBySlugQuery","hotPriceResponse","useGetHotPricePhonesQuery","refetch","isSuccess","data","currentData","UserRoute","getHomePath","name","toString","padStart","description","ProductsSlider","phones"],"sourceRoot":""}